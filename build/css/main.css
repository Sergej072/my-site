/*
* Template Name: Schooll
* Template Author: Gelser
* Template License: 
* Author URI: 

* Twitter: 
* Facebook: 
*/
@import url("https://fonts.googleapis.com/css2?family=DM+Sans:wght@400;500;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Mulish:wght@200;300;400;500;600;700;800;900;1000&display=swap");
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

body {
  color: #696871;
  background-color: #fff;
  padding: 0 5px;
  font: 400 20px "DM Sans", Arial, sans-serif;
}

a {
  color: inherit;
  text-decoration: none;
  -webkit-transition: 0.4s all ease;
  -o-transition: 0.4s all ease;
  transition: 0.4s all ease;
}

ul li,
ol,
li {
  list-style: none;
}

img {
  max-width: 100%;
}

button {
  display: block;
  width: 210px;
  padding: 20px 0;
  border: none;
  border-radius: 10px;
  font: 700 17px "DM Sans", Arial, sans-serif;
  color: #fff;
  cursor: pointer;
  -webkit-transition: 0.4s all ease;
  -o-transition: 0.4s all ease;
  transition: 0.4s all ease;
}

.container {
  max-width: 1100px;
  margin: 0 auto;
}

.btn-primary {
  color: #fff;
  background-color: #22262A;
  font-size: 18px;
  font-weight: 500;
  line-height: 27px;
}
.btn-primary:hover {
  background-color: #df51c9;
}

#header-section {
  padding: 30px 0 100px;
}

.header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
}
.header__logo {
  width: 200px;
}
.header-nav__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.header-nav__item {
  position: relative;
  margin-right: 50px;
  font-size: 15px;
  font-weight: 700;
  color: #696871;
  -webkit-transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
}
.header-nav__item:hover {
  color: #19191B;
}
.header-nav__item:hover::after {
  position: absolute;
  content: "";
  bottom: -10px;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #5454D4;
}
.header-nav__item:last-child {
  margin-right: 0;
}
.header__btn {
  background-color: #FF7143;
}
.header__btn:hover {
  background-color: #ee5423;
}

#section-One {
  padding-bottom: 160px;
}

.home {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.home-left {
  width: 460px;
}
.home-right {
  position: relative;
  overflow-x: hidden;
  width: 580px;
  height: 644px;
}
.home-right-img {
  position: absolute;
  left: 60px;
}
.home__title {
  display: block;
  margin-bottom: 30px;
  font-size: 80px;
  font-weight: 700;
  line-height: 77px;
  letter-spacing: -2.50105px;
  color: #19191B;
}
.home__text {
  margin-bottom: 50px;
  font-family: "Mulish", sans-serif;
  font-size: 20px;
  line-height: 30px;
  letter-spacing: -0.625263px;
  color: #696871;
}
.home-nav {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.home-nav__btn {
  margin-right: 40px;
  background-color: #5454D4;
}
.home-nav__btn:hover {
  background-color: #101fc3;
}
.home-nav__link {
  position: relative;
  display: block;
  width: 60px;
  height: 60px;
  background-color: #FFF;
  border: 1px solid #E7E7E7;
  border-radius: 50%;
  -webkit-transition: 0.4s;
  -o-transition: 0.4s;
  transition: 0.4s;
}
.home-nav__link:hover {
  -webkit-box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.3);
          box-shadow: 0 0 1px 0 rgba(0, 0, 0, 0.3);
}
.home-nav__link::after {
  position: absolute;
  content: "";
  top: 50%;
  left: 50%;
  width: 22px;
  height: 24px;
  background: url(../../../img/arrow-down.svg) no-repeat;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.partners__list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}

#section-Two {
  padding-bottom: 85px;
}

.subscription {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.subscription-left {
  width: 350px;
}
.subscription-right {
  width: 550px;
  padding-top: 95px;
}
.subscription-right__title {
  margin-bottom: 30px;
  font-size: 50px;
  line-height: 57px;
  font-weight: 700;
  color: #19191B;
}
.subscription-right__text {
  width: 465px;
  margin-bottom: 30px;
  font-family: "Mulish", sans-serif;
  line-height: 30px;
}
.subscription-right__link {
  font-size: 17px;
  line-height: 20px;
  color: #5454D4;
  -webkit-transition: 0.4s all ease;
  -o-transition: 0.4s all ease;
  transition: 0.4s all ease;
}
.subscription-right__link:hover {
  color: #ee5423;
}

#section-Three {
  padding-bottom: 140px;
}

.metrics {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
}
.metrics-right {
  width: 350px;
}
.metrics-left {
  width: 550px;
  padding-top: 95px;
}
.metrics-left__title {
  margin-bottom: 30px;
  font-size: 50px;
  line-height: 57px;
  font-weight: 700;
  color: #19191B;
}
.metrics-left__text {
  width: 465px;
  margin-bottom: 30px;
  font-family: "Mulish", sans-serif;
  line-height: 30px;
}
.metrics-left__link {
  font-size: 17px;
  line-height: 20px;
  color: #5454D4;
  -webkit-transition: 0.4s all ease;
  -o-transition: 0.4s all ease;
  transition: 0.4s all ease;
}
.metrics-left__link:hover {
  color: #ee5423;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
